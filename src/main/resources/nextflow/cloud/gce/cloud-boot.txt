#!/bin/bash


# Install java and docker.
# TODO: have this configured as an option in gce config block or remove altogether

if ! which java; then
  if which apt-get; then
    which add-apt-repository || apt-get -y install software-properties-common
    which add-apt-repository || apt-get -y install python-software-properties
    add-apt-repository -y ppa:openjdk-r/ppa
    apt-get update
    apt-get install -y openjdk-8-jdk
  elif which yum; then
    yum install -y java-1.8.0-openjdk
  else
    echo "Neither apt-get nor yum available, cannot install java"
  fi
fi

if ! which docker; then
	curl -fsSL get.docker.com -o get-docker.sh
	sh get-docker.sh

fi
usermod -aG docker !{userName}

su - !{userName} << 'EndOfScript'
(
set -e
set -x

mkdir -p $HOME/.nextflow
cat <<EOF >> $HOME/.nextflow/config
!{nextflowConfig}
EOF

mkdir -p $HOME/bin
profile=$(mktemp)
cat <<EOF > $profile
!{bashProfile}
EOF

mkdir -p $HOME/work

source $profile
cat $profile >> $HOME/.bash_profile
rm $profile

#
# Create credentials for Google cloud
#
if [[ -n "!{gceCredentialsFile}" ]]; then
cat <<EOF >!{gceCredentialsFile}
!{gceCredentials}
EOF
fi

#
# Launch docker and pull the container when DOCKER variable is defined
#
[[ '!{dockerPull}' ]] && for x in '!{dockerPull}'; do docker pull $x || true; done

#
# Install NEXTFLOW and launch it
#
version="v!{nextflow.version}"

download_url=${NEXFLOW_DOWNLOAD_URL:-http://www.nextflow.io/releases}
curl -fsSL ${download_url}/${version}/nextflow  > $HOME/nextflow
chmod +x $HOME/nextflow
$HOME/nextflow -download

# pull the nextflow pipeline repo
[[ '!{nextflow.pull}' ]] && $HOME/nextflow pull '!{nextflow.pull}'

# launch the nextflow daemon
if [[ '!{role}' == worker ]]; then
  $HOME/nextflow node -cluster.join "$NXF_CLUSTER_JOIN" -cluster.interface eth0 -bg
fi

# save the environment for debugging
env | sort > boot.env

mkdir $HOME/work

# just a marker file
touch READY

) &> ~!{userName}/boot.log
EndOfScript

# NFS share work folder
userhome=$(echo ~!{userName})
sudo -u !{userName} mkdir -p work

# TODO: Have automatic NFS support configurable or remove altogether
# TODO: apt-get/yum auto and
yum -y install nfs-utils
echo "Userhome: ${userhome}"
if [[ '!{role}' == master ]]; then
  systemctl enable nfs-server.service
  systemctl start nfs-server.service
  echo "${userhome}/work           *(rw,sync,no_root_squash,no_subtree_check)" >/etc/exports
  exportfs -a
else
  master=$(su - !{userName} ./nextflow cloud list !{clusterName} | grep master | sed 's/ .*//')
  mount $master:/$userhome/work $userhome/work
fi
